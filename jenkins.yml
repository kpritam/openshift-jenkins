apiVersion: v1
kind: Template
labels:
  template: cicd
  group: cicd
metadata:
  annotations:
    description: Creates the CI/CD infrastructure with Jenkins
    iconClass: icon-jenkins
    tags: jenkins,cicd
  name: cicd
message: The CI/CD infrastructure composed of Jenkins.  Jenkins username/password are admin/${JENKINS_PASSWORD}.
parameters:
- description: Webhook secret
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  name: WEBHOOK_SECRET
  required: true
objects:
- apiVersion: v1
  groupNames: null
  kind: RoleBinding
  metadata:
    name: default_edit
  roleRef:
    name: edit
  subjects:
  - kind: ServiceAccount
    name: default
# Pipeline
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      pipeline.alpha.openshift.io/uses: '[{"name": "jenkins", "namespace": "", "kind": "DeploymentConfig"}]'
    labels:
      app: cicd-pipeline
      name: cicd-pipeline
    name: csw-prod-pipeline
  spec:
    triggers:
      - type: GitHub
        github:
          secret: ${WEBHOOK_SECRET}
      - type: Generic
        generic:
          secret: ${WEBHOOK_SECRET}
    runPolicy: Serial
    source:
      type: None
    strategy:
      jenkinsPipelineStrategy:
        jenkinsfile: |-
          pipeline {
            agent {
                label 'sbt-1'
            }
            stages {
                stage('Checkout') {
                    steps {
                        git 'https://github.com/tmtsoftware/csw-prod.git'
                    }
                }
                stage('Build') {
                    steps {
                        sh "sbt clean compile"
                    }
                }

                stage('Tests') {
                    parallel {
                        stage('Unit Tests') {
                            steps {
                                sh "export LC_ALL=en_US.UTF-8"
                                sh "sbt test:test"
                            }
                        }
                        stage('Multi-Jvm') {
                            agent {
                                label 'sbt-2'   
                            }
                            steps {
                                sh "sbt csw-location/multi-jvm:test"
                                sh "sbt csw-config-client/multi-jvm:test"
                                sh "sbt csw-config-client-cli/multi-jvm:test"
                                sh "sbt csw-framework/multi-jvm:test"
                            }
                        }
                    }
                }
              }
          }         
      type: JenkinsPipeline
- apiVersion: v1
  kind: ConfigMap
  metadata:
    labels:
      app: cicd-pipeline
      role: jenkins-slave
    name: sbt-slave-1
  data:
    sbt-slave-1: |-
      <org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
          <inheritFrom></inheritFrom>
          <name>sbt-1</name>
          <privileged>false</privileged>
          <alwaysPullImage>false</alwaysPullImage>
          <instanceCap>2147483647</instanceCap>
          <idleMinutes>0</idleMinutes>
          <label>sbt-1</label>
          <serviceAccount>jenkins</serviceAccount>
          <nodeSelector></nodeSelector>
          <customWorkspaceVolumeEnabled>true</customWorkspaceVolumeEnabled>
          <workspaceVolume class="org.csanchez.jenkins.plugins.kubernetes.volumes.workspace.PersistentVolumeClaimWorkspaceVolume">
              <claimName>ws-pvc</claimName>
              <readOnly>false</readOnly>
          </workspaceVolume>
          <volumes>
              <org.csanchez.jenkins.plugins.kubernetes.volumes.PersistentVolumeClaim>
                  <mountPath>/home/jenkins/.ivy2</mountPath>
                  <claimName>ivy2-pvc</claimName>
                  <readOnly>false</readOnly>
              </org.csanchez.jenkins.plugins.kubernetes.volumes.PersistentVolumeClaim>
              <org.csanchez.jenkins.plugins.kubernetes.volumes.PersistentVolumeClaim>
                  <mountPath>/home/jenkins/.coursier</mountPath>
                  <claimName>coursier-pvc</claimName>
                  <readOnly>false</readOnly>
              </org.csanchez.jenkins.plugins.kubernetes.volumes.PersistentVolumeClaim>
          </volumes>
          <containers>
              <org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
                  <name>jnlp</name>
                  <image>twtmt/opneshift/jenkins-slave-mvn-sbt</image>
                  <privileged>false</privileged>
                  <alwaysPullImage>false</alwaysPullImage>
                  <workingDir>/home/jenkins/jobs</workingDir>
                  <command></command>
                  <args>${computer.jnlpmac} ${computer.name}</args>
                  <ttyEnabled>false</ttyEnabled>
                  <resourceRequestCpu>200m</resourceRequestCpu>
                  <resourceRequestMemory>1Gi</resourceRequestMemory>
                  <resourceLimitCpu>1</resourceLimitCpu>
                  <resourceLimitMemory>4Gi</resourceLimitMemory>
                  <envVars/>
              </org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
          </containers>
          <envVars/>
          <annotations/>
          <imagePullSecrets/>
      </org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
- apiVersion: v1
  kind: ConfigMap
  metadata:
    labels:
      app: cicd-pipeline
      role: jenkins-slave
    name: sbt-slave-2
  data:
    sbt-slave-2: |-
      <org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
          <inheritFrom></inheritFrom>
          <name>sbt-2</name>
          <privileged>false</privileged>
          <alwaysPullImage>false</alwaysPullImage>
          <instanceCap>2147483647</instanceCap>
          <idleMinutes>0</idleMinutes>
          <label>sbt-2</label>
          <serviceAccount>jenkins</serviceAccount>
          <nodeSelector></nodeSelector>
          <customWorkspaceVolumeEnabled>false</customWorkspaceVolumeEnabled>
          <workspaceVolume class="org.csanchez.jenkins.plugins.kubernetes.volumes.workspace.EmptyDirWorkspaceVolume">
          <memory>false</memory>
          </workspaceVolume>
          <volumes>
              <org.csanchez.jenkins.plugins.kubernetes.volumes.PersistentVolumeClaim>
                  <mountPath>/home/jenkins/.ivy2</mountPath>
                  <claimName>ivy2-pvc</claimName>
                  <readOnly>false</readOnly>
              </org.csanchez.jenkins.plugins.kubernetes.volumes.PersistentVolumeClaim>
              <org.csanchez.jenkins.plugins.kubernetes.volumes.PersistentVolumeClaim>
                  <mountPath>/home/jenkins/.coursier</mountPath>
                  <claimName>coursier-pvc</claimName>
                  <readOnly>false</readOnly>
              </org.csanchez.jenkins.plugins.kubernetes.volumes.PersistentVolumeClaim>
              <org.csanchez.jenkins.plugins.kubernetes.volumes.PersistentVolumeClaim>
                  <mountPath>/home/</mountPath>
                  <claimName>ws-pvc</claimName>
                  <readOnly>false</readOnly>
              </org.csanchez.jenkins.plugins.kubernetes.volumes.PersistentVolumeClaim>
          </volumes>
          <containers>
              <org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
                  <name>jnlp</name>
                  <image>twtmt/opneshift/jenkins-slave-mvn-sbt</image>
                  <privileged>false</privileged>
                  <alwaysPullImage>false</alwaysPullImage>
                  <workingDir>/home/jenkins/jobs</workingDir>
                  <command></command>
                  <args>${computer.jnlpmac} ${computer.name}</args>
                  <ttyEnabled>false</ttyEnabled>
                  <resourceRequestCpu>200m</resourceRequestCpu>
                  <resourceRequestMemory>1Gi</resourceRequestMemory>
                  <resourceLimitCpu>1</resourceLimitCpu>
                  <resourceLimitMemory>4Gi</resourceLimitMemory>
                  <envVars/>
              </org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
          </containers>
          <envVars/>
          <annotations/>
          <imagePullSecrets/>
      </org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
